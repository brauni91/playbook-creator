set ( SOURCES
	dialogs/mainDialog.cpp
	dialogs/mainDialog.h
	dialogs/pbcCreateMotionRouteDialog.cpp
	dialogs/pbcCreateMotionRouteDialog.h
	dialogs/pbcCustomRouteDialog.cpp
	dialogs/pbcCustomRouteDialog.h
	dialogs/pbcEditCategoriesDialog.cpp
	dialogs/pbcEditCategoriesDialog.h
	dialogs/pbcExportPdfDialog.cpp
	dialogs/pbcExportPdfDialog.h
	dialogs/pbcNewPlaybookDialog.cpp
	dialogs/pbcNewPlaybookDialog.h
	dialogs/pbcNewPlayDialog.cpp
	dialogs/pbcNewPlayDialog.h
	dialogs/pbcOpenPlayDialog.cpp
	dialogs/pbcOpenPlayDialog.h
	dialogs/pbcSavePlayAsDialog.cpp
	dialogs/pbcSavePlayAsDialog.h
	gui/pbcCustomRouteView.cpp
	gui/pbcCustomRouteView.h
	gui/pbcGridIronView.cpp
	gui/pbcGridIronView.h
	gui/pbcPlayerView.cpp
	gui/pbcPlayerView.h
	gui/pbcPlayView.cpp
	gui/pbcPlayView.h
	models/pbcAbstractMovement.h
	models/pbcCategory.cpp
	models/pbcCategory.h
	models/pbcColor.cpp
	models/pbcColor.h
	models/pbcFormation.h
	models/pbcMotion.cpp
	models/pbcMotion.h
	models/pbcPath.cpp
	models/pbcPath.h
	models/pbcPlay.cpp
	models/pbcPlay.h
	models/pbcPlaybook.cpp
	models/pbcPlaybook.h
	models/pbcPlayer.cpp
	models/pbcPlayer.h
	models/pbcRoute.cpp
	models/pbcRoute.h
	util/pbcConfig.h
	util/pbcDeclarations.h
	util/pbcExceptions.h
	util/pbcPositionTranslator.cpp
	util/pbcPositionTranslator.h
	util/pbcSingleton.h
	util/pbcStorage.cpp
	util/pbcStorage.h
	main.cpp
	pbcVersion.h
)

set ( MOC_HEADERS
	pbcVersion.h
	dialogs/mainDialog.h
	util/pbcDeclarations.h
	models/pbcPlay.h
	models/pbcPlayer.h
	models/pbcRoute.h
	models/pbcPath.h
	util/pbcConfig.h
	models/pbcCategory.h
	models/pbcFormation.h
	util/pbcSingleton.h
	gui/pbcPlayerView.h
	util/pbcPositionTranslator.h
	dialogs/pbcCustomRouteDialog.h
	gui/pbcCustomRouteView.h
	gui/pbcPlayView.h
	gui/pbcGridIronView.h
	models/pbcPlaybook.h
	models/pbcColor.h
	util/pbcStorage.h
	util/pbcExceptions.h
	dialogs/pbcExportPdfDialog.h
	models/pbcMotion.h
	dialogs/pbcCreateMotionRouteDialog.h
	models/pbcAbstractMovement.h
	dialogs/pbcNewPlaybookDialog.h
	dialogs/pbcNewPlayDialog.h
	dialogs/pbcOpenPlayDialog.h
	dialogs/pbcEditCategoriesDialog.h
	dialogs/pbcSavePlayAsDialog.h
)

set ( UIS
	dialogs/mainDialog.ui
    dialogs/pbcCustomRouteDialog.ui
    dialogs/pbcExportPdfDialog.ui
    dialogs/pbcCreateMotionRouteDialog.ui
    dialogs/pbcNewPlaybookDialog.ui
    dialogs/pbcNewPlayDialog.ui
    dialogs/pbcOpenPlayDialog.ui
    dialogs/pbcEditCategoriesDialog.ui
    dialogs/pbcSavePlayAsDialog.ui
)

find_package( Boost 1.54 COMPONENTS serialization REQUIRED )
find_package( Botan 2.4 REQUIRED )

include_directories(${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/src ${Boost_INCLUDE_DIR} ${BOTAN_INCLUDE_DIR})

# linting
set (STYLE_CHECKER ${PROJECT_SOURCE_DIR}/tools/checkStyle.py)
find_package(PythonInterp 3 REQUIRED)
add_custom_target(style_checking 
	COMMAND ${PYTHON_EXECUTABLE} ${STYLE_CHECKER}
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/tools
)

# Next lines needed for building all Qt projects
find_package(Qt5Widgets REQUIRED)
find_package(Qt5PrintSupport REQUIRED)
include_directories(${Qt5Widgets_INCLUDE_DIRS})
add_definitions(${Qt5Widgets_DEFINITIONS})

# Find includes in corresponding build directories
set(CMAKE_INCLUDE_CURRENT_DIR ON)
# Instruct CMake to run moc automatically when needed.
set(CMAKE_AUTOMOC ON)

# Next, using precompiler, compiler and linker
# using Qt meta-system (precompiler)
qt5_wrap_ui( UI_HEADERS ${UIS} )
qt5_wrap_cpp( MOC_SRCS ${MOC_HEADERS} )

# compile
add_executable( ${PROJECT_NAME} ${SOURCES} ${MOC_SRCS} ${UI_HEADERS})
add_dependencies(${PROJECT_NAME} style_checking)

# build it (link libraries)
target_link_libraries( ${PROJECT_NAME} Qt5::Widgets Qt5::PrintSupport ${Boost_LIBRARIES} ${BOTAN_LIBRARIES})
